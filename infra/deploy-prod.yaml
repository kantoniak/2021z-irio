imports:
  - path: apis.jinja
  - path: cloud-function.jinja
  - path: pubsub-topic.jinja

resources:

  # APIs
  - name: enable-apis
    type: apis.jinja
    properties:
      apis:
        - cloudbuild.googleapis.com
        - cloudfunctions.googleapis.com
        - logging.googleapis.com
        - pubsub.googleapis.com
        - sqladmin.googleapis.com
        - cloudtasks.googleapis.com
        - cloudscheduler.googleapis.com

  # Cloud SQL
  - name: services-instance  # This name will be unavailable for a week if you delete instance
    type: sqladmin.v1beta4.instance
    properties:
      databaseVersion: POSTGRES_14
      region: europe-central2
      zone: europe-central2-a
      settings:
        tier: db-f1-micro  # See `gcloud sql tiers list` for a full list
        dataDiskSizeGb: 10
        dataDiskType: PD_HDD
        storageAutoResize: false
        availabilityType: ZONAL
        backupConfiguration:
          enabled: false

  - name: services-db
    type: sqladmin.v1beta4.database
    properties:
      name: services-db
      instance: $(ref.services-instance.name)
      charset: utf8

  - name: services-user
    type: sqladmin.v1beta4.user
    metadata:
      dependsOn:
        - services-db
    properties:
      instance: $(ref.services-instance.name)
      name: services_user  # FIXME: Handle credentials
      password: services_password  # FIXME: Handle credentials
      host: "%"

  # Pub/Sub
  - name: pubsub-all-services-checks
    type: pubsub-topic.jinja
    properties:
      name: all-services-checks

  - name: pubsub-services-to-check
    type: pubsub-topic.jinja
    properties:
      name: services-to-check
  
  # Cloud task queue
  # Here should be a cloud task queue setup, but since isn't supported as of today(06.01.2022) we can't do that
  # https://cloud.google.com/deployment-manager/docs/configuration/supported-gcp-types
  # https://cloud.google.com/deployment-manager/docs/configuration/supported-resource-types

  # Cloud functions
  - name: func-InformSecondaryAdmin
    type: cloud-function.jinja
    metadata:
      dependsOn:
        - services-instance
        - services-user
    properties:
      function: InformSecondaryAdmin
      region: europe-central2
      repo: alerting-platform
      repoPath: InformSecondaryAdmin
      ingressSettings: ALLOW_ALL # FIXME : handle it better
      httpsSecurityLevel: SECURE_ALWAYS
      environmentVariables:
        DB_CONN_NAME: $(ref.services-instance.connectionName)
        DB_USERNAME: services_user  # FIXME: Handle credentials
        DB_PASSWORD: services_password  # FIXME: Handle credentials
        DB_DATABASE: services-db  # FIXME: Handle credentials

  - name: func-MonitorSpecificService
    type: cloud-function.jinja
    metadata:
      dependsOn:
        - services-instance
        - services-user
        - func-InformSecondaryAdmin
    properties:
      function: MonitorSpecificService
      region: europe-central2
      repo: alerting-platform
      repoPath: MonitorSpecificService
      inputTopic: $(ref.pubsub-services-to-check.topicName)
      environmentVariables:
        DB_CONN_NAME: $(ref.services-instance.connectionName)
        DB_USERNAME: services_user  # FIXME: Handle credentials
        DB_PASSWORD: services_password  # FIXME: Handle credentials
        DB_DATABASE: services-db  # FIXME: Handle credentials
        REQUEST_TIMEOUT_SEC: "3"
        ALERTING_WINDOW_SEC: "10"
        QUEUE_NAME: scheduled-tasks-queue
        REGION: $(ref.func-MonitorSpecificService.funcRegion)
        FUNC_TO_CALL: $(ref.func-InformSecondaryAdmin.funcName)
        ALLOWED_RESPONSE_TIME: "60" # In seconds
        PROJECT_NAME: $(ref.pubsub-services-to-check.projectId)

  - name: func-MonitorAllServices
    type: cloud-function.jinja
    metadata:
      dependsOn:
        - func-MonitorSpecificService
        - services-instance
        - services-user
        - pubsub-services-to-check
    properties:
      function: MonitorAllServices
      region: europe-central2
      repo: alerting-platform
      repoPath: MonitorAllServices
      inputTopic: $(ref.pubsub-all-services-checks.topicName)
      environmentVariables:
        DB_CONN_NAME: $(ref.services-instance.connectionName)
        DB_USERNAME: services_user  # FIXME: Handle credentials
        DB_PASSWORD: services_password  # FIXME: Handle credentials
        DB_DATABASE: services-db  # FIXME: Handle credentials
        QUEUE_NAME: scheduled-tasks-queue
        REGION: $(ref.func-MonitorSpecificService.funcRegion)
        PROJECT_NAME: $(ref.pubsub-all-services-checks.projectId)
        PUBSUB_TOPIC: $(ref.pubsub-services-to-check.topicName)

  - name: func-WorkInProgress
    type: cloud-function.jinja
    metadata:
      dependsOn:
        - services-instance
        - services-user
    properties:
      function: WorkInProgress
      region: europe-central2
      repo: alerting-platform
      repoPath: WorkInProgress
      ingressSettings: ALLOW_ALL
      httpsSecurityLevel: SECURE_ALWAYS
      environmentVariables:
        DB_CONN_NAME: $(ref.services-instance.connectionName)
        DB_USERNAME: services_user  # FIXME: Handle credentials
        DB_PASSWORD: services_password  # FIXME: Handle credentials
        DB_DATABASE: services-db  # FIXME: Handle credentials

  # Cloud Scheduler
  - name: call-function-job
    type: gcp-types/cloudscheduler-v1:projects.locations.jobs
    metadata:
      dependsOn:
        - pubsub-all-services-checks
        - func-MonitorAllServices
    properties:
      parent: projects/$(ref.pubsub-all-services-checks.projectId)/locations/europe-central2
      name: call-function-job
      description: "Call MonitorAllServices function"
      schedule: "*/2 * * * *" # every 2 minutes
      timeZone: "Europe/Amsterdam"
      pubsubTarget:
        topicName: projects/$(ref.pubsub-all-services-checks.projectId)/topics/$(ref.pubsub-all-services-checks.topicName)
        data: aGVsbG8hCg== # base64 encoded "hello!"